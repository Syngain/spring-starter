buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
        jacksonVersion = '2.8.3'
        tomcatVersion = '7.0.70'
        springfoxVersion = '2.5.0'
        poiVersion = "3.14"
    }
    repositories {
        maven { url 'http://repox.gtan.com:8078' }
        mavenCentral()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
    }
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '2.14.1'
}

group = 'com.hualongdata.springstart'
version = '1.0.0'

allprojects {
    repositories {
        maven { url 'http://repox.gtan.com:8078' }
        mavenCentral()
        jcenter()
    }
}

def hlCommonBuildScript = file("$rootDir/gradle/common.gradle")

project(':hl-common') {
    apply from: hlCommonBuildScript

    description = 'credit-system-common'

    dependencies {
        compile project(':hl-util')

        compile("com.fasterxml.jackson.module:jackson-module-scala_$scalaLibVersion:2.8.1")
        compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion")
        compile('com.google.guava:guava:19.0')
    }
}

project(':hl-data') {
    apply from: hlCommonBuildScript

    description = 'credit-system-data'

    dependencies {
        compile project(':hl-common')

        compile('org.springframework.boot:spring-boot-starter-data-jpa') {
            exclude group: 'org.apache.tomcat'
        }
        //compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
        //compile('org.springframework.boot:spring-boot-starter-data-redis')
        //compile('org.springframework.boot:spring-boot-starter-jooq')
        //compile('org.postgresql:postgresql:9.4.1209')
        //compile('com.h2database:h2:1.4.192')
        compile('org.hibernate:hibernate-java8:5.0.11.Final')
        compile('mysql:mysql-connector-java:6.0.3')
        compile('com.zaxxer:HikariCP:2.4.7')
    }
}

project(':hl-integration') {
    apply from: hlCommonBuildScript

    description = 'credit-system-integration'

    dependencies {
        compile project(':hl-data')

        compile('org.springframework.boot:spring-boot-starter-web')
    }
}

project(':hl-business') {
    apply from: hlCommonBuildScript

    description = 'credit-system-business'

    dependencies {
        compile project(':hl-data')
        compile project(':hl-integration')

        compile('org.springframework.boot:spring-boot-starter-web')
        compile('org.springframework.boot:spring-boot-starter-mail')
    }
}

project(':hl-web') {
    apply from: hlCommonBuildScript

    description = 'credit-system-web'

    dependencies {
        compile project(':hl-business')

        compile('org.springframework.boot:spring-boot-devtools')
        compile('org.springframework.boot:spring-boot-starter-actuator')

        compile("io.springfox:springfox-swagger2:${springfoxVersion}")
        compile("io.springfox:springfox-swagger-ui:${springfoxVersion}")
    }
}

project(':hl-web-boot') {
    apply from: hlCommonBuildScript

    description = 'credit-system-web-boot'

    jar {
        baseName = "credit-system-web-boot"
    }

    dependencies {
        compile project(':hl-web')

        compile("org.springframework.boot:spring-boot-starter-tomcat") {
            exclude(group: 'org.apache.tomcat.embed')
        }
        compile("org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion")
        compile("org.apache.tomcat.embed:tomcat-embed-el:$tomcatVersion")
        compile("org.apache.tomcat.embed:tomcat-embed-logging-juli:$tomcatVersion")
        compile("org.apache.tomcat.embed:tomcat-embed-websocket:$tomcatVersion")
    }
}

project(':hl-web-war') {
    apply from: hlCommonBuildScript

    apply plugin: 'war'

    description = 'credit-system-web-war'

    war {
        baseName = "credit-system-web-war"
    }

    configurations {
        providedRuntime
    }

    dependencies {
        compile project(':hl-web')

        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    }
}

